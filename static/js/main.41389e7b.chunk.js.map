{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/Header/Header.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-reducer.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/HeaderRight.jsx","redux/auth-reducer.js","components/Header/HeaderRightContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","App.js","index.js","assets/images/preloader.svg","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/HeaderRight.module.css","redux/profile-reducer.js","assets/images/user-photo.png"],"names":["instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","getStatus","updateStatus","status","put","saveProfile","profile","savePhoto","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","ADD_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","body","newMessageBody","sendMessageCreator","module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Header","s","header","src","Navbar","nav","item","to","activeClassName","active","News","Music","Settings","Paginator","onPageChanged","totalItemsCount","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","filter","p","map","classNames","selectedPage","pageNumber","e","User","user","followingInProgress","photos","small","userPhoto","alt","followed","disabled","some","Users","totalUsersCount","users","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","isFetching","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","totalCount","count","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","items","HeaderRight","animation","isAuth","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getAuthUserData","getCaptchaUrlSuccess","url","authReducer","HeaderRightContainer","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","required","style","formSummaryError","length","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","exact","path","render","AppContainer","withRouter","SamuraiJSApp","rerenderEntireTree","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","backgroundColor","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","undefined","addPostActionCreator","newPostText","setStatus","alert","file","getState","Promise","reject","newPost","postId"],"mappings":"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","file":"static/js/main.41389e7b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"4c7e10ff-30a6-4821-8cb9-3d1a029315d3\"\r\n    }\r\n})\r\nexport const usersAPI = {\r\n\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'content-Type' : 'multipart/form-data'\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n\r\n\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: 'Serhio'},\r\n        {id: 2, name: 'Olyalya'},\r\n        {id: 3, name: 'Dashunya'},\r\n        {id: 4, name: 'Yanki'},\r\n        {id: 5, name: 'Pupkin'},\r\n        {id: 6, name: 'Artem'},\r\n        {id: 7, name: 'Roman'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hallo!!!'},\r\n        {id: 2, message: 'I am very glad to see you!!!'},\r\n        {id: 3, message: 'It is so fun'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default dialogsReducer;\r\n\r\nexport const sendMessageCreator = (newMessageBody) =>\r\n    ({type: ADD_MESSAGE, newMessageBody})\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ZeTY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3pgbm\",\"item\":\"Navbar_item__o3yEe\",\"active\":\"Navbar_active__BSfDT\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>< textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>< input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\" ) => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n    /> {text}\r\n    </div>\r\n)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n\r\n            <img src='https://logomaster.ai/static/media/gallery002.936afb9d.png '/>\r\n\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n            <h3 className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Find users</NavLink>\r\n            </h3>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './News.module.css'\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n           <span>News</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News","import React from \"react\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n           <span>Music</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music","import React from \"react\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n           <span>Settings</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings","import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css'\r\nimport classNames from 'classnames/bind';\r\n\r\nlet Paginator = ({currentPage, onPageChanged, totalItemsCount, pageSize, portionSize = 5}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n            <button onClick={ () => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => {\r\n                        return <span className={ classNames({\r\n                    [styles.selectedPage] : currentPage === p\r\n                }, styles.pageNumber ) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={ () => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user-photo.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n        return <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                         className={styles.userPhoto} alt='ava'/>\r\n                    </NavLink>\r\n                              </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id)\r\n                                  }}>\r\n                            Unfollow</button>\r\n                        : <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }}>\r\n                            Follow</button>}\r\n                            \r\n                              </div>\r\n            </span>\r\n\r\n\r\n        <span>\r\n                            <span>\r\n                                <div>{user.name}</div>\r\n                                <div>{user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"user.location.country\"}</div>\r\n                                <div>{\"user.location.city\"}</div>\r\n                            </span>\r\n                    </span>\r\n    </div>\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n    return <div>\r\n        <div><Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                        totalItemsCount={totalUsersCount} pageSize={pageSize}/></div>\r\n             <div>\r\n\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 2000,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    portionSize: 5\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                /*users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )*/\r\n                //возможный рефакторинг, но не работает дизейблинг кнопки и не обновляется её состояние\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                /*users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )*/\r\n                //возможный рефакторинг, но не работает дизейблинг кнопки и не обновляется её состояние\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const requestUsers = (page, pageSize) => {// это thunkCreator\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {// это thunkCreator\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {// это thunkCreator\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\nexport default usersReducer;","import React from 'react';\r\nimport {createSelector} from \"reselect\";\r\n\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector,(users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport Users from './Users';\r\nimport {connect} from 'react-redux';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    follow, setCurrentPage, unfollow,\r\n    toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nexport class UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            < Users totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleFollowingProgress,\r\n        getUsers: requestUsers\r\n    })\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './HeaderRight.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst HeaderRight = (props) => {\r\n    return (<header className={s.header} >\r\n                 <div className={s.animation}>GET ANIMATION</div>\r\n                 <div className={s.login}>\r\n                            { props.isAuth\r\n                                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                                : <NavLink to={'/login'}>Login</NavLink> }\r\n                </div>\r\n        </header>\r\n    );\r\n}\r\nexport default HeaderRight;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_CAPTCHA_URL_SUCCESS :\r\n        case SET_USER_DATA :\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n})\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload:\r\n        {captchaUrl}\r\n})\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe,captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url;\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\nexport default authReducer;","import React from 'react';\r\nimport HeaderRight from \"./HeaderRight\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderRightContainer extends React.Component {\r\n\r\n    render() {\r\n        return <div>\r\n            <HeaderRight {...this.props}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\nexport default connect(mapStateToProps, {logout})(HeaderRightContainer)","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = (props) => {\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt={''}/>}\r\n            {props.captchaUrl &&\r\n            createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\r\n\r\n            {props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS :\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    dispatch(getAuthUserData());\r\n    dispatch(initializedSuccess());\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"  //импортируем промежуточный уровень\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers( applyMiddleware(thunkMiddleware)));\r\n\r\n/*let store = createStore(reducers, applyMiddleware(thunkMiddleware));*/\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\nexport default withSuspense;","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router\";\r\nimport Header from './components/Header/Header';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderRightContainer from \"./components/Header/HeaderRightContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport withSuspense from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        //пока компонента инициализируется, показываем крутилку,\r\n        // как только пропсы изменяться, изменяться данные,\r\n        // initialized будет true. Вернём всё остальное\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <Header/>\r\n                <HeaderRightContainer/>\r\n                <Navbar/>\r\n\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\r\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                        <Route path='/News' component={News}/>\r\n                        <Route path='/Music' component={Music}/>\r\n                        <Route path='/Settings' component={Settings}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                        <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = () => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nexport let rerenderEntireTree = () => {\r\n    ReactDOM.render(<SamuraiJSApp />,\r\n        document.getElementById('root'))\r\n}\r\nrerenderEntireTree();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.998afc79.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={ { backgroundColor: 'white-blue' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3gY-T\",\"error\":\"FormsControls_error__kaXpD\",\"formSummaryError\":\"FormsControls_formSummaryError__2WttR\"};","export const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__378xt\",\"pageNumber\":\"Paginator_pageNumber__FPsBs\",\"selectedPage\":\"Paginator_selectedPage__2n2aH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderRight_header__3fmF8\",\"login\":\"HeaderRight_login__38J4o\"};","import {usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi everyone!', likesCount: 5},\r\n        {id: 2, message: 'It is my first post', likesCount: 7},\r\n        {id: 3, message: 'Hallo', likesCount: 52}\r\n    ],\r\n    profile: undefined,\r\n    status: undefined\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST : {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await usersAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        alert('многоБукав')//здесть можем диспатчить, писать алерты, собирать мусор (SAGA подойдёт)\r\n    }\r\n\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await usersAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await usersAPI.saveProfile(profile)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])//{\"contacts\": {\"facebook\": response.data.messages[0]} }))нужно парсить строки =(\r\n    }\r\n}\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/user-photo.3759889a.png\";"],"sourceRoot":""}