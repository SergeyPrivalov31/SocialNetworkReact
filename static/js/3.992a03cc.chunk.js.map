{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","className","s","statusBlock","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","ava_description","ava","src","photos","small","alt","description","fullName","Preloader","Post","item","message","like","likesCount","maxLengthCreator10","maxLengthCreator","AddPostsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","MyPosts","React","memo","postsElements","posts","reverse","map","p","content","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.992a03cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava_description\":\"ProfileInfo_ava_description__35Zjp\",\"description\":\"ProfileInfo_description__2YnXW\",\"statusBlock\":\"ProfileInfo_statusBlock__143__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__rm9kb\",\"textArea\":\"MyPosts_textArea__3axZ3\",\"button\":\"MyPosts_button__6pElG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Fevu\",\"like\":\"Post_like__3ehFK\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode} className={s.statusBlock}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.ava_description}>\r\n            <div className={s.ava}>\r\n                <img src={props.profile.photos.small} alt={' '}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n            <div className={s.description}>\r\n                <ul>{props.profile.fullName}</ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n   return (\r\n    <div className={s.item}>\r\n      <div>\r\n        <img src='https://sun9-25.userapi.com/c639625/v639625595/51141/mmSXFmNkbU4.jpg?ava=1' />\r\n        <span> {props.message} </span>\r\n      </div>\r\n      <div className={s.like}>\r\n      <img src='https://media.istockphoto.com/vectors/logo-heart-illustrationred-heart-design-icon-flat-modern-flat-love-vector-id1095022948?k=6&m=1095022948&s=170667a&w=0&h=-jGcCNLSkLNZpU4VylJdQgeLI830TR8loHOPiNw6zfw='/> \r\n      {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name=\"newPostText\"\r\n            validate={[required, maxLengthCreator10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add Post</button>\r\n        </div>\r\n    </form>\r\n\r\n}\r\n\r\nlet AddPostsFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostsForm);\r\n\r\nconst MyPosts = React.memo (props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.content}>\r\n            My Posts\r\n            <AddPostsFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n             addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <div>\r\n                <MyPostsContainer />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    /*withAuthRedirect*/\r\n)(ProfileContainer);"],"sourceRoot":""}