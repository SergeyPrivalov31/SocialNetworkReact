{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/dialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","item","src","alt","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCAnND,EAAOC,QAAU,CAAC,KAAO,sBAAsB,IAAM,uB,6FCUtCC,EAPI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,U,kBCMnBC,EAVC,SAACT,GACd,OACC,qBAAKG,UAAWC,IAAEM,KAAlB,SACE,gCACE,qBAAKC,IAAI,+EAA+EC,IAAK,MAC7F,qCAAQZ,EAAMa,QAAd,a,wCCHFC,EAAcC,YAAiB,IAiBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAfQ,SAAChB,GACpB,OACI,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBAAqBjB,KAAK,qBAEjD,8BACI,kDCkBDkB,EA1BC,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMN,GAAI8B,EAAE9B,QACzE+B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAMnE,OAAKb,EAAMoC,OAGP,sBAAKjC,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAEiC,aAAlB,SACKR,IAEL,sBAAK1B,UAAWC,IAAE8B,SAAlB,UACI,8BAAMD,IACN,8BACI,cAAC,EAAD,CAAgBf,SAdZ,SAACoB,GACjBtC,EAAMuC,YAAYD,EAAOE,2BAGH,cAAC,IAAD,CAAUjC,GAAI,Y,wDCZxCkC,EAA6B,SAACd,GAAD,MAAa,CAC1CS,OAAQT,EAAMe,KAAKN,S,QCeRO,sBACXC,aAdkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACiB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UDPR,SAACO,GAAe,IAEtCC,EAFqC,uKAInC,OAAIC,KAAKjD,MAAMoC,OAER,cAACW,EAAD,eAAeE,KAAKjD,QAFG,cAAC,IAAD,CAAUO,GAAG,eAJR,GAEX2C,IAAMH,WAWtC,OAFqCH,YAAQH,EAARG,CAAqCI,KCC/DL,CAGbjB","file":"static/js/4.afd661db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__14XSY\",\"dialogsItems\":\"Dialogs_dialogsItems__3_NFN\",\"dialog\":\"Dialogs_dialog__364hk\",\"active\":\"Dialogs_active__qR14H\",\"messages\":\"Dialogs_messages__1GZZc\",\"message\":\"Dialogs_message__1By2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__7xw1S\",\"alt\":\"Message_alt___7kkl\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n   return (\r\n    <div className={s.item}>\r\n      <div>\r\n        <img src='https://nbnews.com.ua/wp-content/uploads/2020/06/maxresdefault-7-700x394.jpg' alt={' '}/>\r\n        <span> {props.message} </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50 ]}\r\n                       placeholder=\"Enter your message\" name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/dialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <AddMessageForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import {Redirect} from \"react-router\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ( {\r\n    isAuth: state.auth.isAuth\r\n} );\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}