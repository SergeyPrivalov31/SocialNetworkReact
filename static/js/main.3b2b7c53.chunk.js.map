{"version":3,"sources":["redux/dialogs-reducer.js","components/Navbar/Navbar.module.css","components/Header/Header.module.css","api/api.js","serviceWorker.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/common/Paginator/Paginator.jsx","assets/images/user-photo.png","components/Users/User.jsx","components/Users/Users.jsx","redux/users-reducer.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/HeaderRight.jsx","redux/auth-reducer.js","components/Header/HeaderRightContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","App.js","index.js","components/common/FormsControls/FormsControls.js","assets/images/preloader.svg","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/Header/HeaderRight.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","body","newMessageBody","sendMessageCreator","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Header","className","s","header","src","Navbar","nav","item","to","activeClassName","active","News","props","Music","Settings","Paginator","onPageChanged","totalItemsCount","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","filter","p","map","pageNumber","e","User","user","followingInProgress","photos","small","userPhoto","alt","followed","disabled","some","Users","totalUsersCount","users","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","isFetching","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","totalCount","count","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","items","HeaderRight","animation","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderRightContainer","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","required","Input","error","style","formSummaryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","component","AppContainer","withRouter","SamuraiJSApp","rerenderEntireTree","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","placeholder","validators","text","validate","backgroundColor","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","newPost","postId"],"mappings":"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","file":"static/js/main.3b2b7c53.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n\r\n    dialogs: [\r\n        {id: 1, name: 'Serhio'},\r\n        {id: 2, name: 'Olyalya'},\r\n        {id: 3, name: 'Dashunya'},\r\n        {id: 4, name: 'Yanki'},\r\n        {id: 5, name: 'Pupkin'},\r\n        {id: 6, name: 'Artem'},\r\n        {id: 7, name: 'Roman'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hallo!!!'},\r\n        {id: 2, message: 'I am very glad to see you!!!'},\r\n        {id: 3, message: 'It is so fun'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default dialogsReducer;\r\n\r\nexport const sendMessageCreator = (newMessageBody) =>\r\n    ({type: ADD_MESSAGE, newMessageBody})\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3pgbm\",\"item\":\"Navbar_item__o3yEe\",\"active\":\"Navbar_active__BSfDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ZeTY\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"1b518eb4-791f-4cd5-83c0-854ef9a0b789\"\r\n    }\r\n})\r\nexport const usersAPI = {\r\n\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n/*export const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n}*/\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n\r\n            <img src='https://logomaster.ai/static/media/gallery002.936afb9d.png '/>\r\n\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n            <h3 className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Find users</NavLink>\r\n            </h3>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './News.module.css'\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n           <span>News</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News","import React from \"react\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n           <span>Music</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music","import React from \"react\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n           <span>Settings</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings","import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css'\r\n\r\nlet Paginator = ({currentPage, onPageChanged, totalItemsCount, pageSize, portionSize = 5}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n            <button onClick={ () => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => {\r\n                return <span className={ currentPage === p && styles.pageNumber}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={ () => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user-photo.3759889a.png\";","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user-photo.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n        return <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                         className={styles.userPhoto} alt='ava'/>\r\n                    </NavLink>\r\n                              </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id)\r\n                                  }}>\r\n                            Unfollow</button>\r\n                        : <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }}>\r\n                            Follow</button>}\r\n                            \r\n                              </div>\r\n            </span>\r\n\r\n\r\n        <span>\r\n                            <span>\r\n                                <div>{user.name}</div>\r\n                                <div>{user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"user.location.country\"}</div>\r\n                                <div>{\"user.location.city\"}</div>\r\n                            </span>\r\n                    </span>\r\n    </div>\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props}) => {\r\n    return <div>\r\n        <div><Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                        totalItemsCount={totalUsersCount} pageSize={pageSize}/></div>\r\n             <div>\r\n\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 3000,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    portionSize: 5\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                /*users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )*/\r\n                //возможный рефакторинг, но не работает дизейблинг кнопки и не обновляется её состояние\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                /*users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )*/\r\n                //возможный рефакторинг, но не работает дизейблинг кнопки и не обновляется её состояние\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const requestUsers = (page, pageSize) => {// это thunkCreator\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {// это thunkCreator\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {// это thunkCreator\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\nexport default usersReducer;","import React from 'react';\r\nimport {createSelector} from \"reselect\";\r\n\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector,(users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport Users from './Users';\r\nimport {connect} from 'react-redux';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    follow, setCurrentPage, unfollow,\r\n    toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nexport class UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            < Users totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleFollowingProgress,\r\n        getUsers: requestUsers\r\n    })\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './HeaderRight.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst HeaderRight = (props) => {\r\n    return (<header className={s.header} >\r\n                 <div className={s.animation}>GET ANIMATION</div>\r\n                 <div className={s.login}>\r\n                            { props.isAuth\r\n                                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                                : <NavLink to={'/login'}>Login</NavLink> }\r\n                </div>\r\n        </header>\r\n    );\r\n}\r\nexport default HeaderRight;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA :\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n})\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error;\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\nexport default authReducer;","import React from 'react';\r\nimport HeaderRight from \"./HeaderRight\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderRightContainer extends React.Component {\r\n\r\n    render() {\r\n        return <div>\r\n            <HeaderRight {...this.props}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\nexport default connect(mapStateToProps, {logout})(HeaderRightContainer)","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = (props) => {\r\n    return <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            { props.error && <div className={style.formSummaryError}>\r\n                { props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n}\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm  onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS :\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    dispatch(getAuthUserData());\r\n    dispatch(initializedSuccess());\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"  //импортируем промежуточный уровень\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers( applyMiddleware(thunkMiddleware)));\r\n\r\n/*let store = createStore(reducers, applyMiddleware(thunkMiddleware));*/\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}\r\nexport default withSuspense;","import React from 'react';\r\nimport './App.css';\r\nimport {Route, withRouter} from \"react-router\";\r\nimport Header from './components/Header/Header';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderRightContainer from \"./components/Header/HeaderRightContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport withSuspense from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n        return <Preloader />\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <Header/>\r\n                <HeaderRightContainer/>\r\n                <Navbar/>\r\n\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n                    <Route path='/News' component={News}/>\r\n                    <Route path='/Music' component={Music}/>\r\n                    <Route path='/Settings' component={Settings}/>\r\n                    <Route path='/users' render={() => <UsersContainer/>}/>\r\n                    <Route path='/login' render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nexport let rerenderEntireTree = () => {\r\n    ReactDOM.render(<SamuraiJSApp />,\r\n        document.getElementById('root'))\r\n}\r\nrerenderEntireTree();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>< textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}>< input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\" ) => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n    /> {text}\r\n    </div>\r\n)","export default __webpack_public_path__ + \"static/media/preloader.998afc79.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={ { backgroundColor: 'white-blue' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3gY-T\",\"error\":\"FormsControls_error__kaXpD\",\"formSummaryError\":\"FormsControls_formSummaryError__2WttR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderRight_header__3fmF8\",\"login\":\"HeaderRight_login__38J4o\"};","export const required = value => {\r\n    if(value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__378xt\",\"pageNumber\":\"Paginator_pageNumber__FPsBs\",\"selectedPage\":\"Paginator_selectedPage__2n2aH\"};","import {usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi everyone!', likesCount: 5},\r\n        {id: 2, message: 'It is my first post', likesCount: 7},\r\n        {id: 3, message: 'Hakuna Matata', likesCount: 52}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST : {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await usersAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport default profileReducer;"],"sourceRoot":""}