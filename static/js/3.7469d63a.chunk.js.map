{"version":3,"sources":["assets/images/lunatiki.png","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","className","s","statusBlock","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","error","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","description","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","ava_description","ava","src","photos","large","userPhoto","alt","target","files","length","initialValues","formData","then","Post","item","image","message","like","likesCount","maxLengthCreator10","maxLengthCreator","AddPostsFormRedux","Field","component","name","validate","required","MyPosts","React","memo","postsElements","posts","reverse","p","id","content","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7469d63a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lunatiki.e0a5dc02.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava_description\":\"ProfileInfo_ava_description__35Zjp\",\"ava\":\"ProfileInfo_ava__1TGaY\",\"description\":\"ProfileInfo_description__2YnXW\",\"statusBlock\":\"ProfileInfo_statusBlock__143__\",\"contact\":\"ProfileInfo_contact__1u2Cq\",\"contacts\":\"ProfileInfo_contacts__1MsO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__rm9kb\",\"textArea\":\"MyPosts_textArea__3axZ3\",\"button\":\"MyPosts_button__6pElG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Fevu\",\"like\":\"Post_like__3ehFK\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status] );//копируем статус который к нам пришёл из пропсов в свой локальный стейт (с помощью useState,\r\n                            // только в том случае если статус из вне поменялся\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status</b>:<span onDoubleClick={activateEditMode} className={s.statusBlock}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, ...props}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n\r\n        <div><button>save</button></div>\r\n        { props.error && <div className={style.formSummaryError}>\r\n            { props.error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b >Full name</b>:\r\n            {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:\r\n            {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user-photo.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, isOwner, savePhoto, status, updateStatus, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={s.ava_description}>\r\n            <div>\r\n                <img className={s.ava} src={profile.photos.large || userPhoto} alt={' '}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            <div>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }}\r\n                                   profile={profile} isOwner={isOwner}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div className={s.description}>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div><b>Full name: </b>{profile.fullName}</div>\r\n        <div><b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n        {profile.lookingForAJob &&\r\n        <div><b>My professional skills</b>: {profile.lookingForAJobDescription}</div>\r\n        }\r\n        <div><b>About me</b>: {profile.aboutMe}</div>\r\n        <div>\r\n            <b className={s.contacts}>Contacts</b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport image from '../../../../assets/images/lunatiki.png';\r\nconst Post = (props) => {\r\n   return (\r\n    <div className={s.item}>\r\n      <div>\r\n        <img src={image} />\r\n        <span> {props.message} </span>\r\n      </div>\r\n      <div className={s.like}>\r\n      <img src='https://media.istockphoto.com/vectors/logo-heart-illustrationred-heart-design-icon-flat-modern-flat-love-vector-id1095022948?k=6&m=1095022948&s=170667a&w=0&h=-jGcCNLSkLNZpU4VylJdQgeLI830TR8loHOPiNw6zfw='/> \r\n      {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLengthCreator10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} name=\"newPostText\"\r\n            validate={[required, maxLengthCreator10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add Post</button>\r\n        </div>\r\n    </form>\r\n\r\n}\r\n\r\nlet AddPostsFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostsForm);\r\n\r\nconst MyPosts = React.memo (props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.content}>\r\n            My Posts\r\n            <AddPostsFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n             addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         saveProfile={props.saveProfile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto}\r\n            />\r\n            <div>\r\n                <MyPostsContainer />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;// match взялся благодаря withRouter (коннектит к url)\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;// authorizedUserId взялся благодаря connect (коннектит к стору)\r\n            if(!userId) {this.props.history.push(\"/login\")}\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                        />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    /*withAuthRedirect*/\r\n)(ProfileContainer);"],"sourceRoot":""}